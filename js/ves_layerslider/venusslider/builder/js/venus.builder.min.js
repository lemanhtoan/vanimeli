
var localStorage = localStorage||{};
var ajaxUploadImageUrl = ajaxUploadImageUrl||"";
var status_uploaded = {};

jQuery(function ($) {

    ! function (t, i, n) {
        function e(i, n, e, o) {
            a = this, this.element = i, this.$element = t(i), this.options = {}, n && (this.options.data = n, this.options.controller = e || {}, this.options.callback = o, this.binderid = this.$element.data("binderid") || parseInt(1e4 * Math.random() + 1), this.namespace = "." + this.binderid + ".binder", this.$element.data("binderid", this.binderid), this.init())
        }
        var a, o = "binder";
        e.prototype = {
            init: function () {
                this.fieldArray = this.$element.find("[data-bind]:input"), this.fieldArray.length && this.attach()
            },
            attach: function (i) {
                var e = this.options.data,
                    o = t(n).off(this.namespace);
                t.each(this.fieldArray, function (n) {
                    var r = t(a.fieldArray[n]),
                        s = r.attr("type");
                    if (r.data("bind")) {
                        var c = r.data("bind");
                        if (trigger = r.data("trigger"), "text" == s || "number" == s || r.is("textarea")) r.val(e[c]), i || o.on((trigger || "keyup") + a.namespace, function (i) {
                            var n = t(i.target);
                            n.is(r) && (e[c] = n.val(), "number" == s && (e[c] = parseInt(e[c])), a.options.controller[c] && a.options.controller[c](e[c]), a.options.callback && a.options.callback())
                        });
                        else if ("checkbox" == s) e[c] === !0 && r.prop("checked", !0), i || o.on((trigger || "change") + a.namespace, function (i) {
                            var n = t(i.target);
                            n.is(r) && (e[c] = n.is(":checked") ? !0 : !1, a.options.controller[c] && a.options.controller[c](e[c]), a.options.callback && a.options.callback())
                        });
                        else if ("radio" == s) {
                            var l = t('[name="' + r.attr("name") + '"]:visible');
                            l.val([e[c]]), i || o.on((trigger || "change") + a.namespace, function (i) {
                                var n = t(i.target);
                                n.is(r) && (e[c] = n.val(), a.options.controller[c] && a.options.controller[c](e[c]), a.options.callback && a.options.callback())
                            })
                        } else(r.is("select") || "hidden" == s) && (r.val(e[c]), i || o.on((trigger || "change") + a.namespace, function (i) {
                            var n = t(i.target);
                            n.is(r) && (e[c] = n.val(), a.options.controller[c] && a.options.controller[c](e[c]), a.options.callback && a.options.callback())
                        }))
                    }
                })
            }
        }, t.fn[o] = function (t, i, n) {
            return this.each(function () {
                new e(this, t, i, n)
            })
        }
    }(jQuery, window, document);

    function savedata() {
        /* Comment by Panda
        if (!localStorageSupport()) return alert("No local storage support detected. Your slider will not be saved!"), !1;
        try {
            localStorage.setItem("lush", getdata(!0))
        } catch (t) {
            return alert("There was an error saving your slider. Please, see documentation before continue. [" + t.name + "]"), !1
        }*/
    }

    function saveslider() {
        return getdata(!0);
    }

    function validateForm() {
        var valid = true;
        $(".form_error").remove();
        if($("#input_title").length > 0) {
            if($("#input_title").val() == "" ) {
                $("#input_title").parent().append('<span class="form_error" style="display:none">The field is required, please input value</span>');
                valid = false;
            }
        }
        if($("#input_alias").length > 0) {
            if($("#input_alias").val() == "" ) {
                $("#input_alias").parent().append('<span class="form_error" style="display:none">The field is required, please input value</span>');
                valid = false;
            }
        }

        if($(".form_error").length > 0 ) {
            if(!valid) {
                $(".form_error").fadeIn("slow");
            } else {
                $(".form_error").fadeOut("slow");
            }
        }
        return valid;
    }
    function getdata(t) {
        var e = {};

        var form_key = $("input[name='form_key']").val();

        if(isFlexsliderMode()) {
            flexSlider.is_flexslider = 1;
        }

        return getAllSlides().each(function () {
            var t = $(this);
            name = this.id, e[name] = {}, e[name].slide = t.data("slideData"), getCurrentSlideChilds(t).each(function (t) {
                var a = $(this);
                e[name][t] = {}, a.copydata(["itemData", "currentClass", "customclase", "id", "originalTitle"], e[name][t])
                
                /*Ajax upload image and Remove image base 64 in item Data*/
                var element_type = e[name][t]['itemData']['type'];
                if(typeof(element_type) != "undefined" && element_type == "image" && e[name][t]['itemData']['src64'] !=""){
                    status_uploaded = ajaxUploadImage(e[name][t]['itemData']['src'], e[name][t]['itemData']['src64']);
                    if(status_uploaded.status) {
                        e[name][t]['itemData']['src64'] = "";
                    }
                    status_uploaded = {};
                    
                }
            })
            $("#ajax_loading").hide();
        }), e.ss = sliderSize, e.fw = isFullwidth(), e.bg = sliderBackground, e.fs = isFlexsliderMode() ? flexSlider : !1, t ? JSON.stringify(e) : e
    }

    function ajaxUploadImage(image_name, image_source_data) {
        status_uploaded = {};
        var form_key = $("input[name='form_key']").val();

        status_uploaded.status = true;
        status_uploaded.imageSrc = "";
        return status_uploaded;
    }

    function restoredata() {

        if($("#slider_json_data").length > 0 && $("#slider_json_data").val()) {
            var t, e = $("#slider_json_data").val();
            if (e) return t = JSON.parse(e), t && restoreslide(t), !0
        } else {
            if (!localStorageSupport()) return !1;
            var t, e = localStorage.getItem("lush");
            if (e) return t = JSON.parse(e), t && restoreslide(t), !0 
        }
       
    }

    function restoreslide(t) {
        var e, a, r = 0;
        for (var i in t)
            if (!/ss|fw|bg|fs/.test(i)) {
                e = t[i].slide, r = addSlide(e), a = "#slide-container-" + r, e || (e = $(a).data("slideData"));
                for (var s in t[i])
                    if ("slide" != s) {
                        itemData = t[i][s].itemData, itemData.id = gItemIdCounter++;
                        var o = ItemCreate[itemData.type](itemData);
                        isEmpty(itemData.style) || Controller.style(itemData.style, o)
                    }
            }
        t.ss && ($("#slider-width").val(t.ss.width), $("#slider-height").val(t.ss.height), setSliderSize()), t.fw && toggleFullwidth(!0), t.bg && "" != t.bg.src && ($.extend(sliderBackground, t.bg), setSliderBackground(t.bg.src, t.bg.src64)), t.fs && setFlexsliderMode(t.fs), listElements()
        $.extend(sliderBackground, t.bg);
        $("#skin-class").val(t.bg.skin);
        $("#shadow-class").val(t.bg.shadow);
        
    }

    function exportdata() {
        var t = getdata(!0);
        $("#export-target").text(t)
    }

    function importdata() {
        var t = $("#import-target");
        importData = t.val(), $("import-status").text("Importing..");
        try {
            var e = JSON.parse(importData);
            restoreslide(e), $("#import-status").text("Success!")
        } catch (a) {
            $("#import-status").text("Error!")
        }
    }

    function localStorageSupport() {
        try {
            return "localStorage" in window && null !== window.localStorage
        } catch (t) {
            return !1
        }
    }
    $.fn.copydata = function (t, e) {
        return this.each(function () {
            for (var a = $(this), r = 0, i = t.length; i > r; r++) e[t[r]] = a.data(t[r])
        })
    }, $.fn.pastedata = function (t, e) {
        return this.each(function () {
            for (var a = $(this), r = 0, i = t.length; i > r; r++) a.data(t[r], e[t[r]])
        })
    };

    function getVideoPreview(e, t, i) {
        switch (t) {
        case "youtube":
            var a = e;
            $.getJSON("http://gdata.youtube.com/feeds/api/videos/" + a + "?v=2&alt=json&callback=?", function () {
                i(e, "http://img.youtube.com/vi/" + a + "/" + "maxresdefault.jpg")
            });
            break;
        case "vimeo":
            var n = e;
            $.getJSON("http://vimeo.com/api/v2/video/" + n + ".json?callback=?", function (e) {
                i(n, e[0].thumbnail_large)
            })
        }
    }

    function generateMarkupRevolution(e) {
        var t = "",
            i = gImageLocation.val();

        return t += '<div class="bannercontainer banner-fullscreen">',t += '<div id="ves-layerslider" class="rev_slider fullscreenbanner" ', t += ' style="', t += ' width:100%;height:'+sliderSize.height+'px; ', t += '" >', t +='<ul>', getAllSlides().each(function () {
            var i = $(this),
                n = i.data("slideData"),
                o = getCurrentSlideChilds(i);
            if(0 != o.length) {
                var main_image = "";
                o.each(function () {
                    var i = $(this).data("itemData");
                    if(i.type == "image" && i.ignore) {
                        main_image = i.src64;
                    }
                })
                t += '<li data-masterspeed="'+n.slider_duration+'" data-transition="'+n.slider_transition+'" data-slotamount="'+n.slider_slot+'" data-thumb="'+main_image+'">';

                if( typeof(n.slider_usevideo) != "undefined" && (n.slider_usevideo == 'youtube' || n.slider_usevideo == 'vimeo' ) && !n.slider_videoid ) {

                    var vurl  = '//player.vimeo.com/video/'+n.slider_videoid+'/';
                    if(  n.slider_usevideo == 'youtube' ){
                        vurl  = '//www.youtube.com/embed/'+n.slider_videoid+'/';
                    }
                    t += '<div class="caption fade fullscreenvideo" data-autoplay="true" data-x="0" data-y="0" data-speed="500" data-start="10" data-easing="easeOutBack"><iframe src="'+vurl+'?title=0&amp;byline=0&amp;portrait=0;api=1" width="100%" height="100%"></iframe></div>';
                } else if ( typeof(main_image) !="undefined" && main_image !="" ) {
                    t += '<img src="'+main_image+'"  alt="Image"/>';
                }

                o.each(function () {
                    var i = $(this).data("itemData");
                    if(typeof(i.ignore) == "undefined" || !i.ignore || i.ignore =="") {
                        var startAnimation = i.in;
                        var endAnimation = i.out;

                        startAnimation.from = typeof(startAnimation.from) != "undefined" ?startAnimation.from:"auto";
                        startAnimation.use = typeof(startAnimation.use) != "undefined"?startAnimation.use:"easeOutExpo";
                        if(  startAnimation.from == 'auto' ){
                            startAnimation.from = '' ;
                        }

                        endAnimation.to = typeof(endAnimation.to) != "undefined" ?endAnimation.to:"auto";
                        endAnimation.use = typeof(endAnimation.use) != "undefined"?endAnimation.use:"easeOutExpo";

                        var endeffect = '';
                        if(  endAnimation.to == 'auto' ){
                            endAnimation.to = '' ;
                        }
                        if( typeof(endAnimation.at) !="undefined" && parseInt(endAnimation.at) ){
                            endeffect = ' data-end="' + parseInt(endAnimation.at) + '"';
                            endeffect += ' data-endspeed="' + endAnimation.during + '"';
                            if( endAnimation.use != 'nothing') {
                                endeffect += ' data-endeasing="' + endAnimation.use + '" ';    
                            }
                        }else {
                            endAnimation.to = '' ;
                        }
                        t += '<div class="caption ' + i.clase + ' ' + i.customclase + ' ' + startAnimation.from + ' ' + startAnimation.use + ' ' + endAnimation.use + ' ' + endAnimation.to + '" data-x="' + i.left + '" data-y="' + i.top + '" data-speed="' + startAnimation.during + '" data-start="' + startAnimation.at + '" data-easing="' + startAnimation.use + '" ' + endeffect + '>';

                        t += Generator[i.type](n.globals, i, e);

                        t += "</div>";
                    }
                })
                t += "</li>";
            }
            
        }), t += "</ul></div></div>"
    }

    function generateMarkup(e) {
        var t = "",
            i = gImageLocation.val();
        return "";
    }

    function generateJS() {
        var e = (getCurrentSlide(), "");
        return "";
    }

    function addInteraction() {
        doDraggable(this), doResizable(this)
    }

    function doDraggable(e) {
        var t = parseInt(gStuffGridSize.val(), 0),
            i = {};
        i.snap = gStuffSnapItem[0].checked, i.grid = gStuffSnapGrid[0].checked ? [t, t] : !1, i.stop = i.grid ? function (e, i) {
            $(this).css({
                top: i.position.top - i.position.top % t,
                left: i.position.left - i.position.left % t
            }), updatePos.call(this)
        } : updatePos, i.axis = !1, gStuffDragX[0].checked && (i.axis = "x"), gStuffDragY[0].checked && (i.axis = "y"), i.drag = function (e, t) {
            Controller.clip(t.helper.data("itemData").clip, this)
        }, toggleGrid(t), e.draggable(i)
    }

    function doResizable(e) {
        e.hasClass("ui-resizable") && e.data("ui-resizable") && e.resizable("destroy"), e.resizable({
            containment: getCurrentSlide(),
            minWidth: 30,
            minHeight: 30,
            start: function (e, t) {
                t.element.addClass("hilight")
            },
            stop: function (e, t) {
                var i = t.element.removeClass("hilight").data("itemData");
                i.width = t.element.css("width"), i.height = t.element.css("height")
            }
        })
    }

    function toggleFullwidth(e) {
        var t, i = $(".container.slider"),
            a = $("#slider-width");
        if (e === !0) {
            if ($("#do-fw").hasClass("active")) return;
            $("#do-fw").addClass("active")
        }
        i.hasClass("fw") ? t = a.data("oldWidth") == parseInt(a.val()) ? 1140 : a.data("oldWidth") : (a.data("oldWidth", a.val()), t = $(window).width()), a.val(t), setSliderSize(), i.toggleClass("fw")
        return false;
    }

    function setRandomInOut(e) {
        $('#in-transitionx').val((Math.floor(Math.random() * 101) - 50) * 10);
        $('#in-transitiony').val((Math.floor(Math.random() * 101) - 50) * 10);
        $('#in-transitionz').val((Math.floor(Math.random() * 11) - 5) * 10);

        $('#in-rotationx').val((Math.floor(Math.random() * 101) - 50) * 10);
        $('#in-rotationy').val((Math.floor(Math.random() * 101) - 50) * 10);
        $('#in-rotationz').val((Math.floor(Math.random() * 101) - 50) * 10);

        $('#in-scalex').val((Math.floor(Math.random() * 31)) * 10);
        $('#in-scaley').val((Math.floor(Math.random() * 31)) * 10);

        $('#in-skewx').val(Math.floor(Math.random() * 61));
        $('#in-skewy').val(Math.floor(Math.random() * 61));

        $('#in-opacity').val(0);
        $('#in-perspective').val(600);

        $('#in-originx').val((Math.floor(Math.random() * 41) - 20) * 10);
        $('#in-originy').val((Math.floor(Math.random() * 41) - 20) * 10);


        $('#out-transitionx').val((Math.floor(Math.random() * 101) - 50) * 10);
        $('#out-transitiony').val((Math.floor(Math.random() * 101) - 50) * 10);
        $('#out-transitionz').val((Math.floor(Math.random() * 11) - 5) * 10);

        $('#out-rotationx').val((Math.floor(Math.random() * 101) - 50) * 10);
        $('#out-rotationy').val((Math.floor(Math.random() * 101) - 50) * 10);
        $('#out-rotationz').val((Math.floor(Math.random() * 101) - 50) * 10);


        $('#out-scalex').val((Math.floor(Math.random() * 31)) * 10);
        $('#out-scaley').val((Math.floor(Math.random() * 31)) * 10);


        $('#out-skewx').val(Math.floor(Math.random() * 61));
        $('#out-skewy').val(Math.floor(Math.random() * 61));


        $('#out-opacity').val(0);
        $('#out-perspective').val(600);


        $('#out-originx').val((Math.floor(Math.random() * 41) - 20) * 10);
        $('#out-originy').val((Math.floor(Math.random() * 41) - 20) * 10);


        $("#customin_effect input").trigger("blur");
        $("#customin_effect input").trigger("forcusout");

        $("#customout_effect input").trigger("blur");
        $("#customout_effect input").trigger("forcusout");
    }

    function toggleGrid(e) {
        var t = "repeating-linear-gradient(0deg, rgba(0,0,0,0.3), rgba(0,0,0,0.3) 1px, transparent 1px, transparent {size}px),repeating-linear-gradient(-90deg, rgba(0,0,0,0.3), rgba(0,0,0,0.3) 1px, transparent 1px, transparent {size}px)",
            i = getAllSlides();
        $("#show-grid").is(":checked") ? i.css({
            "background-image": t.replace(/{size}/g, e),
            "background-size": e + "px " + e + "px",
            "background-repeat": "",
            "background-position": ""
        }) : setSliderBackground()
    }

    function setSliderBackground(e, t) {
        var i = getAllSlides();
        initInputColor();
        t && (sliderBackground.src = e, sliderBackground.src64 = t), e === !1 && (sliderBackground = {
            src: "",
            src64: ""
        }), sliderBackground.skin = $("#skin-class").val() , sliderBackground.shadow =  $("#shadow-class").val(), sliderBackground.size = "" == $.trim(sliderBackground.size) ? "100% auto" : sliderBackground.size, sliderBackground.position = "" == $.trim(sliderBackground.position) ? "0 0" : sliderBackground.position, sliderBackground.repeat = "" == $.trim(sliderBackground.repeat) ? "no-repeat" : sliderBackground.repeat, sliderBackground.bgcolor = "" == $.trim(sliderBackground.bgcolor) ? "initial" : sliderBackground.bgcolor, i.css({
            "background-color": sliderBackground.bgcolor?sliderBackground.bgcolor:'initial',
            "background-image": "url(" + sliderBackground.src64 + ")",
            "background-size": sliderBackground.size,
            "background-position": sliderBackground.position,
            "background-repeat": sliderBackground.repeat
        })
       
    }

    function initInputColor() {
        $("input.input-color").each(function(){
            /*
            var myPicker = new jscolor.color(this, {});

            if($(this).val()) {
                myPicker.fromString($(this).val())  // now you can access API via 'myPicker' variable
            }*/
        })
        
    }

    function updatePos() {
        var e = $(this);
        $.extend(e.data("itemData"), {
            top: e.css("top"),
            left: e.css("left")
        })
    }

    function loadOptions(e, t, labels) {
        var list_label = labels||{};
        $.each(t, function (t, i) {
            var option_text = i;
            if(typeof(labels) != "undefined" && typeof(list_label[i]) != "undefined" && list_label[i] != "") {
                option_text = list_label[i];
                $("<option/>", {
                    value: i
                }).text(option_text).appendTo(e)
            } else {
                option_text = option_text.replace("custom.", "");
                $("<option/>", {
                    value: i
                }).text(option_text).appendTo(e)
            }
        })
    }

    function classList(e, t, i) {
        for (var a = document.getElementById(e), n = a.sheet.cssRules, o = [], r = 0; r < n.length; r++) t && t.test(n[r].selectorText) || i && !i.test(n[r].selectorText) || o.push(n[r].selectorText.replace(".", ""));
        return o
    }

    function isEmpty(e) {
        return "undefined" == typeof e || null === e || "" === e ? !0 : "number" == typeof e && isNaN(e) ? !0 : e instanceof Date && isNaN(Number(e)) ? !0 : !1
    }

    function addCurrentSliderSetting( e ) {
        var a = getCurrentSlide().data("slideData");
        if($(".slider-params").length > 0) {
            $(".slider-params").find("input[type=text],select,textarea").each(function() {
                var bind_name = $(this).data("bind");
                if(typeof(bind_name) != "undefined" && bind_name != "") {
                    $(this).val(a[bind_name]);
                    if((a[bind_name] == "" || typeof(a[bind_name]) == "undefined" || a[bind_name] == null ) && $(this).is("select")) {
                        $(this).val($(this).find("option").first().val());
                        getCurrentSlide().data("slideData")[bind_name] = $(this).find("option").first().val();
    
                    }
                    
                }
            })
        }
    }
    function addSlide(e) {
        var t, i = ++gSlideCounter,
            a = e || newSlide();
        return t = $("<li/>").append('<a href="#slide-' + i + '">' + "Slide-" + i + "</a>" + ' <div class="popable"' + 'data-id="#pover-slide"' + 'data-placement="bottom"' + 'data-toggle="popover"' + 'data-original-title="Slide Settings"><em class="icon-cog"></em> </div>').appendTo(gSlideTabs), $('<div id="slide-container-' + i + '"/>').appendTo(gSlideContent).wrap('<div class="tab-pane" id="slide-' + i + '"/>').data("slideData", a), setSliderSize(), $("a", t).tab("show"), setSliderBackground(), listElements(), i
    }

    function cloneSlide() {
        var e, t = getCurrentSlide(),
            i = $.extend({}, t.data("slideData"));
        e = addSlide(i), getCurrentSlideChilds(t).each(function () {
            var e = $(this),
                t = $.extend(!0, {}, e.data("itemData"), {
                    id: getNewItemId()
                });
            item = ItemCreate[t.type](t), Controller.style(t.style, item)
        }), listElements()
    }

    function setSliderSize() {
        var e = parseInt($("#slider-width").val()),
            t = parseInt($("#slider-height").val());
        sliderSize.width = e || 1140, sliderSize.height = t || 450, getAllSlides().each(function () {
            var e = $(this);
            e.width(sliderSize.width).height(sliderSize.height), e.find(".lush-element").each(function () {
                var e = $(this);
                Controller.clip(e.data("itemData").clip, e)
            })
        })
    }

    function getEditingElement() {
        return $(".lush-element.poped")
    }

    function getCurrentSlide() {
        return $(".tab-content > .active > div")
    }

    function getCurrentSlideChilds(e) {
        return (e ? e : getCurrentSlide()).children(".lush-element")
    }

    function getAllSlides() {
        return $("[id*=slide-container-]")
    }

    function isFullwidth() {
        return $("#do-fw").is(".active")
    }

    function isFlexsliderMode() {
        /*return true;*/
        return ($("#is_flexslider").hasClass("active") || $("#is_flexslider").prop( "checked" ) || $("#is_flexslider").is( ":checked" ));
    }

    function setFlexsliderMode(e) {
        $.extend(flexSlider, e), gModeFlexslider.addClass("active");
        if(e.is_flexslider) {
            $("#is_flexslider").prop("checked", true);
        }
    }

    function isCarouselMode() {
        return gModeCarousel.is(":checked")
    }

    function isManualMode() {
        return gModeManual.is(":checked")
    }

    function lushDemoPreview(e, t, i) {
        var a, n, o, r = $("#effect-preview-block");
        return i && r.length ? (r.remove(), void 0) : ("" !== e && ("undefined" != typeof createEffect && $("#custom-css").text(createEffect(e)), n = ' data-slide-in="at 100 from ' + e + '"', o = ' data-slide-out="at 1000 to ' + e + '"', a = '<div id="effect-preview-block"><div class="lush-slider no-skin no-shadow"><div class="lush"><div id="demo-effect-block" ' + n + o + ">Demo effect</div>" + "</div></div></div>", r = $(a).appendTo(document.body), t && r.css(t), r.show(), $(".lush-slider").lush({
            baseWidth: 300,
            baseHeight: 120,
            slider: {
                navigation: !1,
                responsive: !1,
                shadow: !1
            }
        })), void 0)
    }

    function testAnim(x) {
        x = x.replace("custom.","");
        $('#demo-effect-block').removeClass().addClass(x + ' animated').one('webkitAnimationEnd mozAnimationEnd MSAnimationEnd oanimationend animationend', function(){
           $(this).removeClass();
        });
        return;
    }

    function animateDemoPreview(anim, t, i) {
        var a, n, o, r = $("#effect-preview-block");
        var html = '<div id="effect-preview-block"><div class="lush-slider no-skin no-shadow"><div class="lush"><div id="demo-effect-block">Demo effect</div></div></div></div>';

        
        if(i && r.length) {
            return (r.remove(), void 0);
        }

        if(anim.indexOf("custom.") < 0) {
            return;
        }

        r = $(html).appendTo(document.body);

        if(t){
            r.css(t);
        }
        r.show();
        return testAnim(anim);
    }

    function getNewItemId() {
        return gItemIdCounter++
    }
    function getSpotIcon() {
        return "http://venustheme.com/guides/hotspot.png";
    }
    function newItem(e) {
        return {
            id: getNewItemId(),
            type: e,
            top: 0,
            left: 0,
            bottom: 0,
            right: 0,
            width: "auto",
            height: "auto",
            src: "nopicture.jpg",
            src64: "http://venustheme.com/guides/image.jpg",
            ignore: !1,
            content: "Text Element",
            tag: "h1",
            style: "",
            clase: "",
            customclase: "",
            productsku: "",
            showimage: 1,
            showprice: 1,
            showrating: 0,
            href: "#",
            target: "_top",
            opacity: 1,
            videosrc: "http://venustheme.com/guides/video.jpg",
            videotype: "youtube",
            videoid: "",
            "in": {
                at: 500,
                from: "left",
                use: "swing",
                during: 500,
                split: "none",
                speed: 100,
                transitionx: 0,
                transitiony: 0,
                transitionz: 0,
                rotationx: 0,
                rotationy: 0,
                rotationz: 0,
                scalex: 0,
                scaley: 0,
                skewx: 0,
                skewy: 0,
                opacity: 0,
                perspective: 300,
                originx: 50,
                originy: 50,
                plus: 0,
                override: !1
            },
            out: {
                at: 500,
                to: "right",
                use: "swing",
                during: 500,
                split: "none",
                speed: 100,
                transitionx: 0,
                transitiony: 0,
                transitionz: 0,
                rotationx: 0,
                rotationy: 0,
                rotationz: 0,
                scalex: 0,
                scaley: 0,
                skewx: 0,
                skewy: 0,
                opacity: 0,
                perspective: 300,
                originx: 50,
                originy: 50,
                plus: 0,
                force: !1,
                override: !1
            }
        }
    }

    function newSlide() {
        return {
            deadtime: 0,
            status: 1,
            slider_title: "",
            slider_status: 1,
            slider_transition: 'random',
            slider_easing: 'auto',
            slider_slot: 7,
            slider_rotation: 0,
            slider_duration: 700,
            slider_enable_link: 0,
            slider_link: "",
            slider_productsku: 0,
            slider_usevideo: 0,
            slider_videoid: "",
            slider_videoplay: 0,
            slider_delay: 0,
            slider_class: "",
            slider_attribute: "",
            slider_customfields: "",
            slider_bgcolor: "",
            "mainimage": {
                type: "image",
                image: "",
                external_image: "",
                solid_color: "",
                fit: "",
                repeat: "no-repeat",
                position: "left top",
                kenburn: "off"
            },
            globals: !1,
            "in": {
                at: 500,
                from: "left",
                use: "swing",
                split: "none",
                speed: 100,
                transitionx: 0,
                transitiony: 0,
                transitionz: 0,
                rotationx: 0,
                rotationy: 0,
                rotationz: 0,
                scalex: 0,
                scaley: 0,
                skewx: 0,
                skewy: 0,
                opacity: 0,
                perspective: 300,
                originx: 50,
                originy: 50,
                during: 1e3,
                plus: 0
            },
            out: {
                at: 500,
                to: "right",
                use: "swing",
                split: "none",
                speed: 100,
                transitionx: 0,
                transitiony: 0,
                transitionz: 0,
                rotationx: 0,
                rotationy: 0,
                rotationz: 0,
                scalex: 0,
                scaley: 0,
                skewx: 0,
                skewy: 0,
                opacity: 0,
                perspective: 300,
                originx: 50,
                originy: 50,
                during: 1e3,
                plus: 0,
                force: !1
            }
        }
    }

    function listElements() {
        var e = (getCurrentSlide(), $());

        addCurrentSliderSetting();

        getCurrentSlideChilds().each(function () {
            var t = $(this),
                i = t.data("itemData");

            e = e.add($('<div class="toe-item-timeline"><div class="toe-item-action drag-handler" title="Drag"></div><div class="toe-item-action action-visibility' + (t.hasClass("invisible") ? " invisible" : "") + '" title="Show / Hide"><em class="icon-eye-open"></em></div>' + '<div class="toe-item-type' + (t.hasClass("invisible") ? " invisible" : "") + '">' + i.type + "</div>" + '<div class="toe-item-action action-clone" title="Clone"><em class="icon-copy"></em></div>' + '<div class="toe-item-action action-remove" title="Remove"><em class="icon-remove"></em></div>' + '<div class="timeline-wrapper">' + '<div class="timeline-slider"></div>' + "</div>" + "</div>")), e.eq(-1).data("item", t)
        }), gToeItem.html("").append(e), gToeItem.sortable({
            items: ".toe-item-timeline",
            placeholder: "drag-highlight",
            tolerance: "pointer",
            handle: ".drag-handler",
            start: function () {},
            update: function (e, t) {
                var i = t.item.data("item"),
                    a = t.item.index();
                i.insertAt(a, getCurrentSlide())
            }
        }).find(".timeline-slider").each(function () {
            var e = $(this),
                t = e.parent().parent().data("item"),
                i = t.data("itemData"),
                a = parseInt(i. in .at / 10),
                n = a + parseInt((i.out.at + i. in .during + i.out.during) / 10);
            e.on("mousedown touchstart", function (e) {
                activateTimeline($(this).parent()), $(e.target).is(".ui-slider-handle, .ui-slider-range") || e.stopImmediatePropagation()
            }).dragslider({
                range: !0,
                rangeDrag: !0,
                min: 0,
                max: 3e3,
                step: 10,
                values: [a, n],
                change: function () {},
                slide: function (e, t) {
                    return 10 * (t.values[1] - t.values[0]) < i. in .during + i.out.during ? !1 : (i. in .at = 10 * t.values[0], i.out.at = 10 * t.values[1] - parseInt(i. in .at + i. in .during + i.out.during), loadItemInputs(i), void 0)
                }
            })
        })
    }

    function activateTimeline(e) {
        var t = e.parent().data("item"),
            i = t.data("itemData");
        getCurrentSlideChilds().removeClass("hilight"), t.addClass("hilight"), gToeItem.find(".timeline-wrapper.active").removeClass("active"), e.addClass("active"), gToeDataIn.binder(i["in"], !1, listElements), gToeDataOut.binder(i.out, !1, listElements), loadItemInputs(i)
    }

    function loadItemInputs(e) {
        gToeDataInputs.each(function () {
            var t = this,
                i = this.id.split("-");
            t.value = e[i[0]][i[1]]
        })
    }

    function attachElementActions() {
        gToeItem.on("click", ".action-clone", function (e) {
            e.stopPropagation(), e.preventDefault(), $(".poped").popover("hide").popable("hide");
            var t = $(this).parent().data("item").removeClass("hilight"),
                i = $.extend(!0, {}, t.data("itemData"), {
                    id: getNewItemId()
                }),
                a = ItemCreate[i.type](i);
            Tools.align(a, "tl"), getCurrentSlideChilds().last().after(a), Controller.style(i.style, a), listElements()
        }).on("click", ".action-remove", function (e) {
            e.stopPropagation(), e.preventDefault(), $(this).parent().data("item").popover("destroy").remove(), listElements()
        }).on("click", ".action-visibility", function (e) {
            e.stopPropagation(), e.preventDefault(), $(this).parent().data("item").toggleClass("invisible"), listElements()
        })
    }
    $(window).on("load", restoredata).on("beforeunload", savedata);
    var gItemIdCounter, gSlideCounter, gSlideTabs, gSlideContent, gStuffGridSize, gStuffSnapItem, gStuffSnapGrid, gStuffDragX, gStuffDragY, gModeFlexslider, gModeCarousel, gModeManual, gImageLocation, gToeItem, gToeData, gToeDataIn, gToeDataOut, gToeDataInputs;
    $(document).ready(function () {
        var e = $(document);
        ($(".preview").removeClass("hidden").next(".muted").remove(), e.on("mouseenter", ".effect-list > option", function (e) {
            e.preventDefault();
            var t = $(this),
                i = t.parent().offset();
            i.left -= 330, animateDemoPreview(t.val(), i)
        }).on("mouseleave", ".effect-list > option", function () {
            animateDemoPreview("", "", !0)
        })), gItemIdCounter = 0, gSlideCounter = 0, gSlideTabs = $("#slide-tabs"), gSlideContent = $("#slide-content"), gStuffGridSize = $("#grid-size"), gStuffSnapItem = $("#snap-item"), gStuffSnapGrid = $("#snap-grid"), gStuffDragX = $("#drag-x"), gStuffDragY = $("#drag-y"), gModeFlexslider = $("#flexslider-mode"), gModeCarousel = $("#carousel-mode"), gModeManual = $("#manual-mode"), gImageLocation = $("#image-location"), gToeItem = $("#toe > .toe-item"), gToeData = $("#toe > .toe-data"), gToeDataIn = gToeData.children(".toe-data-in"), gToeDataOut = gToeData.children(".toe-data-out"), gToeDataInputs = gToeData.find("input, select"), $('<style id="custom-css"/>').appendTo("html > head");
        var t;

        $(".slider-params").find("input").change(function() {
            var bind_name = $(this).data("bind");
            if(typeof(bind_name) != "undefined" && bind_name != "") {
                getCurrentSlide().data("slideData")[bind_name] = $(this).val();
            }
        })
        $(".slider-params").find("select").change(function() {
            var bind_name = $(this).data("bind");
            if(typeof(bind_name) != "undefined" && bind_name != "") {
                if ($(this).attr("multiple") == "multiple") {
                    var currentValues = $(this).val() || [];
                    getCurrentSlide().data("slideData")[bind_name] = currentValues.join(",");
                } else {
                    getCurrentSlide().data("slideData")[bind_name] = $(this).val();
                }
                
            }
        })

        $("#set-random-animation").click(function(){
            setRandomInOut(this);
        })

        $("#set-random-out-animation").click(function(){
            setRandomInOut(this);
        })
        $("#toggle_custom_in").click(function(){
            $("#customin_effect").toggle();
        })
        $("#toggle_custom_out").click(function(){
            $("#customout_effect").toggle();
        })
        
        $(".sortable").sortable({
            items: "li",
            cancel: "li:not(.active)",
            placeholder: "drop-highlight",
            tolerance: "pointer",
            start: function () {
                t = $(this).children()
            },
            update: function (e, i) {
                var a = $(this).children(),
                    n = a.index(i.item),
                    o = t.index(i.item),
                    r = gSlideContent.children();
                r.eq(o).clone(), n > o ? r.eq(n).after(r[o]) : r.eq(n).before(r[o])
            }
        }), $("#do-fw").click(toggleFullwidth), $("#ieport").on("click", function () {
            $("#import-status").text(""), $("#ieport-modal").modal("show")
        }), $("#do-import").on("click", importdata), $("#do-export").on("click", exportdata), $(".no-bubble").on("click", function (e) {
            var t = $(this).find("input");
            t.prop("checked", !t.prop("checked")).trigger("change"), e.preventDefault(), e.stopImmediatePropagation()
        }), gModeFlexslider.on("change", function () {
            gModeCarousel[0].checked = !1, gModeManual[0].checked = !1;
            if(gModeFlexslider.prop("checked")) {
               gModeFlexslider.addClass("active");
            } else {
                gModeFlexslider.removeClass("active");
            }
        }), gModeFlexslider.on("click", function () {
            if(gModeFlexslider.prop("checked")) {
               gModeFlexslider.addClass("active");
            } else {
                gModeFlexslider.removeClass("active");
            }
           
        }), gModeCarousel.on("change", function () {
            gModeFlexslider[0].checked = !1
        }), gModeManual.on("change", function () {
            gModeFlexslider[0].checked = !1
        }), gImageLocation.on("change", function () {
            for (var e = $(this).val();
                "/" === e.charAt(e.length - 1);) e = e.substring(0, e.length - 1);
            $(this).val(e)
        }), $(".minimize").click(function () {
            var e = $(this).find("em");
            $(".bar").toggleClass("no-label"), e.hasClass("icon-angle-up") ? e.removeClass("icon-angle-up").addClass("icon-angle-down") : e.removeClass("icon-angle-down").addClass("icon-angle-up")
        }), $(".text-classes").each(function () {
            loadOptions(this, classList("lush-items-css", /focus|hover|button|block/))
        }), $(".link-classes").each(function () {
            loadOptions(this, classList("lush-items-css", /focus|hover/, /button/))
        }), $(".block-classes").each(function () {
            loadOptions(this, classList("lush-items-css", /focus|hover/, /block/))
        }),  $("#in-split").each(function () {
            loadOptions(this, splitList);
        }), $("#out-split").each(function () {
            loadOptions(this, splitList);
        }), $("#in-from").each(function () {
            loadOptions(this, effectFromList, effectFromLabelList);
            $(this).change(function(){
                if($(this).val() == "customin") {
                    $("#customin_effect").show("slow");
                } else {
                    $("#customin_effect").hide("slow");
                }
            })
        }), $("#out-to").each(function () {
            loadOptions(this, effectList, effectLabelList);
            $(this).change(function(){
                if($(this).val() == "customout") {
                    $("#customout_effect").show("slow");
                }  else {
                    $("#customout_effect").hide("slow");
                }
            })
        }), $(".easing-list").each(function () {
            loadOptions(this, easingList)
        }), e.on("click", "#slide-tabs > li > a", function (e) {
            e.preventDefault(), $(this).tab("show"), listElements()
        }), setSliderSize(), $("#slider-width").change(setSliderSize), $("#slider-height").change(setSliderSize), $("#add-slide").click(function () {
            addSlide()
        }), $("#remove-slide").click(function () {
            var e = getCurrentSlide(),
                t = e.parent(),
                i = t[0].id;
            1 == gSlideTabs.find("li").length ? e.find("*").remove() : (gSlideTabs.find('[href="#' + i + '"]').parent().remove(), t.remove(), gSlideTabs.find("li:first > a").tab("show")), listElements()
        }), $("#snap-grid, #snap-item, #grid-size, #show-grid, #drag-x, #drag-y").on("change", function () {
            addInteraction.call($(".ui-draggable"))
        }), $("#generate").click(function () {
            $("#generated-markup").text(generateMarkup($("#base64-image").is(":checked"))), $("#generated-js").text(generateJS()), window.prettyPrint && prettyPrint(), $("#modal").modal("show")
        }), $("#format-markup").click(function () {
            var e = $("#generated-markup");
            e.text(style_html(e.text())), window.prettyPrint && prettyPrint()
        }), $(".preview").click(function () {
            var e = getAllSlides(),
                t = (e.eq(0), $("#prev-container").html(generateMarkupRevolution(!0))),
                i = $("#prev-modal");
            var delay = $('#slider_options_delay').val(),
                hide_navigator_after = $("#slider_options_hide_navigator_after").val(),
                thumbnail_width = $("#slider_options_thumbnail_width").val(),
                thumbnail_height = $("#slider_options_thumbnail_width").val(),
                thumbnail_amount = $("#slider_options_thumbnail_amount").val(),
                navigator_type = $("#slider_options_navigator_type").val(),
                navigator_arrows = $("#slider_options_navigator_arrows").val(),
                navigation_style = $("#slider_options_navigation_style").val(),
                offset_horizontal = $("#slider_options_offset_horizontal").val(),
                offset_vertical = $("#slider_options_offset_vertical").val(),
                shadow_type = $("slider_options_shadow_type").val();
            i.css({
                width: sliderSize.width + 50,
                marginLeft: -((sliderSize.width + 50) / 2)
            }), i.one("shown", function () {
                /*Call Revolution Slider JS*/
                if ($.fn.cssOriginal!=undefined)
                  $.fn.css = $.fn.cssOriginal;

                  $('#ves-layerslider').revolution(
                    {
                      delay: delay,
                      startheight: sliderSize.height,
                      startwidth: sliderSize.width,
                      hideThumbs: hide_navigator_after,

                      thumbWidth: thumbnail_width,           
                      thumbHeight: thumbnail_height,
                      thumbAmount: thumbnail_amount,

                      navigationType: navigator_type ,       
                      navigationArrows: navigator_arrows ,
                      navigationStyle: navigation_style,
                  
                      navOffsetHorizontal: offset_horizontal,
                      navOffsetVertical: offset_vertical,  

                      touchenabled: "on",      
                      onHoverStop: "off",            
                      shuffle: "off", 
                      stopAtSlide:-1,           
                      stopAfterLoops:-1,            

                      hideCaptionAtLimit:0,       
                      hideAllCaptionAtLilmit:0,       
                      hideSliderAtLimit:0,      
                      fullWidth: "on",
                      shadow: shadow_type

                    });

            }).one("hidden", function () {
                t.children().remove()
            }).modal("show")
        }), $("a[data-toggle=popover], .popable").popable({
            handlerSelector: ".element",
            handlerTarget: function () {
                var e = $(this).find(".idx").text();
                return getCurrentSlideChilds().eq(e)
            },
            afterShow: function (e) {
                var t = $(this),
                    i = getEditingElement().data("itemData") || getCurrentSlide().data("slideData"),
                    a = t.next(".popover");
				var customclase = "";
                if(typeof(getEditingElement().data("itemData")) != "undefined") {
                    customclase = getEditingElement().data("itemData").customclase;
                }
                if(typeof(customclase) == "undefined") {
                    customclase = getEditingElement().data("customclase");
                }
				Controller.customclase(customclase);
                

                if ("#pover-bgimage" == e) return a.binder(sliderBackground, Controller, listElements), void 0;
                if ("#pover-flexslider" == e) return a.binder(flexSlider, Controller, listElements), void 0;
                if ("#pover-slide" == e) return a.binder(i, Controller, listElements), $(".sortable").sortable("option", "disabled", !0), void 0;
                "#animation-in" == e || "#animation-out" == e ? a.binder(i[e.split("-")[1]], !1, listElements) : a.binder(i, Controller, listElements), a.parents(".popover").find("input, select").prop("disabled", !0), a.find("input, select").prop("disabled", !1);
                var n = a.find(".ui-slider");
                n.length && n.slider({
                    value: getEditingElement().data("itemData").opacity,
                    min: 0,
                    max: 1,
                    step: .1,
                    change: function (e, t) {
                        getEditingElement().data("itemData").opacity = t.value, Controller.opacity(t.value)
                    }
                })
                if(typeof(getEditingElement().data("customclase")) !="undefined" ) {
                    $("#customclase").val(getEditingElement().data("customclase"));
                }
            },
            beforeHide: function () {
                var e = $(this).next(".popover"),
                    t = getEditingElement().data("itemData") || getCurrentSlide().data("slideData");
                e.parents(".popover").find("input,select").prop("disabled", !1).binder(t, Controller, listElements)
            },
            afterHide: function (e) {
                "#pover-slide" == e && $(".sortable").sortable("option", "disabled", !1)
            }
        }), e.on("click", ".fileup", function (e) {
            var src = $('#filemanager-fancybox').data("src"),
                field_id = $(this).data("id"),
                t = getCurrentSlideChilds().filter(".lush-element.poped"),
                r = t.data("itemData"),
                fancybox_width = $('#filemanager-fancybox').data("width"),
                fancybox_height = $('#filemanager-fancybox').data("height");

            fancybox_width = (typeof(fancybox_width) != "undefined")?parseInt(fancybox_width):880;
            fancybox_height = (typeof(fancybox_height) != "undefined")?parseInt(fancybox_height):570;

            if(typeof(r) !== "undefined") {
                $("#"+field_id).attr("rel", r.id );
            }

            src = src.replace("__FIELD_ID__", field_id);
            $('#filemanager-fancybox').attr("href", src);

            $('#filemanager-fancybox').fancybox({
                  'width'   : fancybox_width,
                  'height'  : fancybox_height,
                  'type'    : 'iframe',
                  'autoScale'   : false
            });

            $('#filemanager-fancybox').trigger('click');

            return false;
        }), e.on("change", ".image-path", function (e) {
            var t = getCurrentSlideChilds().filter(".lush-element"),
                element_id = $(this).attr("rel"),
                n = $(this).val();
            var a = $(this).val().replace(base_media_url, "");
            if (a.length) {
                if ("bg-image-path" == e.target.id) setSliderBackground(a, n);
                else {
                    var r = null;
                    var ti = null;
                    if(element_id && t.length > 0) {
                        t.each(function() {
                            var tr = $(this).data("itemData");
                            if(tr.id == element_id) {
                                r = tr;
                                ti = $(this);
                            }
                        })
                    }
                    if(r != null ) {
                        r.src = a, r.src64 = n, ti.children("img").attr("src", n)
                    }
                    
                }
            }
        }), e.on("change", ".fileup", function (e) {
            var t = getCurrentSlideChilds().filter(".lush-element.poped"),
                i = setInterval(function () {
                    var a, n, o = $(".fileupload-preview > img");
                    if (o.length) {
                        if (clearInterval(i), a = o.attr("alt"), n = o.attr("src"), "bg-image" == e.target.id) setSliderBackground(a, n);
                        else {
                            var r = t.data("itemData");
                            r.src = a, r.src64 = n, t.css({
                                width: o[0].naturalWidth,
                                height: o[0].naturalHeight
                            }).children("img").attr("src", n)
                        }
                        o.remove()
                    }
                }, 50)
        }), e.on("change keyup paste input", ".filepath", function (e) {
           var t = getCurrentSlideChilds().filter(".lush-element.poped");
            var a = $(this).val();
            var r = t.data("itemData");
            if (a.length) {
                var ti = null;
                if(r != null ) {
                    r.src64 = a, r.src = a, t.children("img").attr("src", a)
                }
            }

        }), e.on("click", ".remove-item-quick", function (e) {
            e.stopPropagation(), getEditingElement().popover("destroy").remove(), listElements()
        }).on("click", "#remove-bg", function () {
            setSliderBackground(!1)
        }).on("click", ".clone-slide", function (e) {
            e.stopPropagation(), e.preventDefault(), cloneSlide()
        }), $("#add-image, #add-text, #add-link, #add-imglink, #add-productsku, #add-block, #add-video").click(function () {
            var e = this.id.split("-")[1];
            ItemCreate[e](newItem(e)), listElements()
        }), e.on("click", "[id*=tool-]", function () {
            var e = this.id.split("-");
            Tools[e[1]](getEditingElement(), e[2])
        }), e.on("mouseenter mouseleave", ".toe-item-timeline", function (e) {
            $(this).data("item")["mouseenter" == e.type ? "addClass" : "removeClass"]("hilight")
        }), attachElementActions(), setInterval(savedata, 6e4), $(window).load(function () {
            0 == getAllSlides().length && addSlide()
        })

    }), ItemCreate = {
        init: function (e, t) {
            return e.appendTo(getCurrentSlide()).data("itemData", t), addInteraction.call(e), e
        },
        image: function (e) {
            var t;
            return t = $("<div/>", {
                style: "top: " + e.top + "; left: " + e.left + "; width:" + e.width + "; height: " + e.height + ";",
                "class": "lush-element lush-element-wrapper popable",
                "data-id": "#pover-image",
                "data-original-title": "Image Element"
            }).append('<img src="' + e.src64 + '" alt="' + e.id + '">'), this.init(t, e)
        },
        text: function (e) {
            var t;
            var customclase = e.customclase;
            if(typeof(customclase) == "undefined" && $("#customclase").length > 0 ) {
                customclase = $("#customclase").val();
            }
            return e.src = e.src64 = "", t = $("<div/>", {
                style: "top: " + e.top + "; left: " + e.left + "; width:" + e.width + "; height: " + e.height + ";",
                "class": "lush-element popable " + e.clase + ' ' + customclase,
                "data-id": "#pover-text",
                "data-customclase": customclase,
                "data-original-title": "Text Element"
            }).text(e.content), this.init(t, e)
        },
        productsku: function (e) {
            var t;
            var customclase = e.customclase;
            if(typeof(customclase) == "undefined" && $("#customclase").length > 0 ) {
                customclase = $("#customclase").val();
            }
            return e.src = e.src64 = e.videosrc = "", t = $("<div/>", {
                style: "top: " + e.top + "; left: " + e.left + "; width:" + e.width + "; height: " + e.height + ";",
                "class": "lush-element popable " + e.clase + ' ' + customclase,
                "data-id": "#pover-productsku",
                "data-customclase": customclase,
                "data-original-title": "Product Spot"
            }).append('<img src="' + getSpotIcon()+ '" alt="' + e.content + '" title="Product Hotspot">'), this.init(t, e)
        },
        link: function (e) {
            var t;
            var customclase = e.customclase;
            if(typeof(customclase) == "undefined" && $("#customclase").length > 0 ) {
                customclase = $("#customclase").val();
            }

            return e.src = e.src64 = "", t = $("<a/>", {
                style: "top: " + e.top + "; left: " + e.left + "; width:" + e.width + "; height: " + e.height + ";",
                "class": "lush-element popable " + e.clase + ' ' + customclase,
                "data-customclase": customclase,
                "data-id": "#pover-link",
                "data-original-title": "Anchor Element"
            }).text(e.content), this.init(t, e)
        },
        imglink: function (e) {
            var t;
            return t = $("<div/>", {
                style: "top: " + e.top + "; left: " + e.left + "; width:" + e.width + "; height: " + e.height + ";",
                "class": "lush-element lush-element-wrapper popable",
                "data-id": "#pover-imglink",
                "data-original-title": "Image Link Element"
            }).append('<img src="' + e.src64 + '" alt="' + e.id + '">'), this.init(t, e)
        },
        block: function (e) {
            var t;

            var customclase = e.customclase;
            if(typeof(customclase) == "undefined" && $("#customclase").length > 0 ) {
                customclase = $("#customclase").val();
            }

            return e.src = e.src64 = "", e.width = "auto" == e.width ? "60px" : e.width, e.height = "auto" == e.height ? "60px" : e.height, e.clase = "" == e.clase ? "block-orange" : e.clase, t = $("<div/>", {
                style: "top: " + e.top + "; left: " + e.left + "; width:" + e.width + "; height: " + e.height + "; opacity:" + e.opacity,
                "class": "lush-element popable " + e.clase + ' ' + customclase,
                "data-id": "#pover-block",
                "data-customclase": customclase,
                "data-original-title": "Text Element"
            }).data("currentClass", e.clase), t.data("customclase", customclase), this.init(t, e)
        },
        video: function (e) {
            var t;
            return e.width = "auto" == e.width ? "170" : e.width, e.height = "auto" == e.height ? "96" : e.height, t = $("<div/>", {
                style: "top: " + e.top + "; left: " + e.left + "; width:" + e.width + "; height: " + e.height + ";",
                "class": "lush-element lush-element-wrapper popable",
                "data-id": "#pover-video",
                "data-original-title": "Video Element"
            }).append('<img src="' + e.videosrc + '" alt="' + e.id + '">'), this.init(t, e)
        }
    };
    var sliderSize = {
        width: 1140,
        height: 450
    }, sliderBackground = {
            src: "",
            src64: "",
            repeat: "no-repeat",
            skin: "",
            shadow: "",
            position: "0 0",
            bgcolor: "",
            size: "100% auto"
        }, flexSlider = {
            is_flexslider: !1,
            animation: "slide",
            direction: "left",
            speed: 600,
            easing: "easeInOutExpo",
            pauseonhover: !1
        }, Tools = {
            resize: function (e, t) {
                var i = getCurrentSlide().width(),
                    a = getCurrentSlide().height();
                if (("h" == t || "f" == t) && e.width(i), ("v" == t || "f" == t) && e.height(a), "r" == t) {
                    var n = "block" == e.data("itemData").type;
                    e.css({
                        width: n ? 60 : "auto",
                        height: n ? 60 : "auto"
                    })
                }
                this.update({
                    width: e.css("width"),
                    height: e.css("height")
                })
            },
            align: function (e, t) {
                var i = getCurrentSlide().width(),
                    a = getCurrentSlide().height(),
                    n = {};
                switch (t) {
                case "tt":
                    n.top = 0, n.bottom = "auto";
                    break;
                case "bb":
                    n.bottom = "auto", n.top = a - e.outerHeight(!0) + "px";
                    break;
                case "ll":
                    n.left = 0, n.right = "auto";
                    break;
                case "rr":
                    n.right = "auto", n.left = i - e.outerWidth(!0) + "px";
                    break;
                case "tl":
                    n.top = n.left = 0, n.right = n.bottom = "auto";
                    break;
                case "tr":
                    n.top = 0, n.left = i - e.outerWidth(!0) + "px", n.right = n.bottom = "auto";
                    break;
                case "bl":
                    n.top = a - e.outerHeight(!0) + "px", n.left = 0, n.right = n.bottom = "auto";
                    break;
                case "br":
                    n.top = a - e.outerHeight(!0) + "px", n.left = i - e.outerWidth(!0) + "px", n.bottom = n.right = "auto";
                    break;
                case "cc":
                    n.top = a / 2 - e.outerHeight(!0) / 2 + "px", n.left = i / 2 - e.outerWidth(!0) / 2 + "px", n.right = n.bottom = "auto";
                    break;
                case "vc":
                    n.top = a / 2 - e.outerHeight(!0) / 2 + "px", n.bottom = "auto";
                    break;
                case "hc":
                    n.left = i / 2 - e.outerWidth(!0) / 2 + "px", n.right = "auto"
                }
                e.css(n), this.update(n)
            },
            order: function (e, t) {
                "up" == t ? e.before(e.next().is(".popover") ? e.next().next() : e.next()) : e.after(e.prev()), listElements()
            },
            update: function (e) {
                $.extend(getEditingElement().data("itemData"), e)
            }
        }, Controller = {
            content: function (e) {
                var t = getEditingElement(),
                    i = t.data("itemData");
                t.html(e), i.width = t.css("width"), i.height = t.css("height"), doResizable(t)
            },
            sku: function (e) {
                var t = getEditingElement().attr("sku", e),
                    i = t.data("itemData");
                    i.videosrc = "";
                    i.width = t.css("width"), i.height = t.css("height"), doResizable(t)
            },
            showimage: function (e) {
                getEditingElement().attr("showimage", e)
            },
            showprice: function (e) {
                getEditingElement().attr("showprice", e)
            },
            showrating: function (e) {
                getEditingElement().attr("showrating", e)
            },
            clase: function (e) {
                var t = getEditingElement(),
                    i = getEditingElement().data("itemData");
                t.data("currentClass") && t.removeClass(t.data("currentClass")), t.addClass(e).data("currentClass", e), i.width = t.css("width"), i.height = t.css("height")
            },
            customclase: function (e) {
                var t = getEditingElement(),
                    i = getEditingElement().data("itemData");
                if(typeof(i) !="undefined" && typeof(t) != "undefined") {
                    i.customclase = e;
                    t.data("customclase", e);
                }   
               
            },
            style: function (e, t) {
                var i = t || getEditingElement(),
                    a = "custom-" + i.data("itemData").id;
                csslink = $("#" + a), isEmpty(e) || (csslink.length || (csslink = $('<style type="text/css" rel="stylesheet" id="' + a + '" />').appendTo("head")), csslink.text("." + a + "{" + e + "}"), i.addClass(a))
            },
            width: function (e) {
                var t = getEditingElement(),
                    i = isEmpty(e) ? t.width() : parseInt(e) > 0 ? e : "auto";
                t.css({
                    width: i
                }).data("itemData").width = i
            },
            height: function (e) {
                var t = getEditingElement(),
                    i = isEmpty(e) ? t.height() : parseInt(e) > 0 ? e : "auto";
                t.css({
                    height: i
                }).data("itemData").height = i
            },
            target: function (e) {
                getEditingElement().attr("target", e)
            },
            href: function (e) {
                getEditingElement().attr("href", e)
            },
            opacity: function (e) {
                getEditingElement().css("opacity", e)
            },
            clip: function (e, t) {
                var i = t ? $(t) : getEditingElement(),
                    a = i.position(),
                    n = "rect(";
                e ? (n += (a.top < 0 ? -a.top : "0") + "px, ", n += (a.left < 0 ? sliderSize.width + -a.left : sliderSize.width - a.left) + "px, ", n += (a.top < 0 ? sliderSize.height + -a.top : sliderSize.height - a.top) + "px, ", n += (a.left < 0 ? -a.left : "0") + "px)") : n = "", i.css("clip", n)
            },
            videoid: function (e) {
                var t = getEditingElement(),
                    i = t.data("itemData");
                i.videosrc = getVideoPreview(e, i.videotype, function (e, a) {
                    t.children("img").attr("src", a), i.videoid = e, i.videosrc = a
                })
            },
            position: setSliderBackground,
            bgcolor: setSliderBackground,
            repeat: setSliderBackground,
            size: setSliderBackground,
            skin: setSliderBackground,
            shadow: setSliderBackground
        }, Generator = {
            image: function (e, t, i) {
                var a = "",
                    n = gImageLocation.val();
                return a += '<img src="' + (i ? t.src64 : "" === n ? t.src : n + "/" + t.src) + '" ', t.ignore ? (a += 'class="ignore' + (i ? " custom-" + t.id : "") + '" ', a += 'style="width: ' + t.width + "; height: " + t.height + '" ') : (a += i ? 'class="custom-' + t.id + '" ' : "", (!e || t. in .override) && (a += ''), (!e || t.out.override) && (a += ''), a += 'style="' + " width: " + (isNaN(t.width) ? t.width : t.width + "px") + "; height: " + (isNaN(t.height) ? t.height : t.height + "px") + ";" + (i ? "" : t.style) + '" '), a += 'alt="" />'
            },
            text: function (e, t, i) {
                var a = "";
                return a += '<div class="' + t.clase + (i ? " custom-" + t.id : "") + '" ', (!e || t. in .override) && (a += ''), (!e || t.out.override) && (a += ''), a += 'style="' + " width: " + (isNaN(t.width) ? t.width : t.width + "px") + "; height: " + (isNaN(t.height) ? t.height : t.height + "px") + ";" + (i ? "" : t.style) + '" ', a += ">" + t.content + "</div>"
            },
            productsku: function (e, t, i) {
                var a = "";
                return a += '<div class="' + t.clase + (i ? " custom-" + t.id : "") + '" ', (!e || t. in .override) && (a += ''), (!e || t.out.override) && (a += ''), a += 'style="' + " width: " + (isNaN(t.width) ? t.width : t.width + "px") + "; height: " + (isNaN(t.height) ? t.height : t.height + "px") + ";" + (i ? "" : t.style) + '" ', a += ">" + t.sku + "</div>"
            },
            link: function (e, t, i) {
                var a = "";
                return a += '<a class="' + t.clase + (i ? " custom-" + t.id : "") + '" ', a += 'href="' + t.href + '" ', a += 'target="' + t.target + '" ', (!e || t. in .override) && (a += ''), (!e || t.out.override) && (a += ''), a += 'style="' + " width: " + (isNaN(t.width) ? t.width : t.width + "px") + "; height: " + (isNaN(t.height) ? t.height : t.height + "px") + ";" + (i ? "" : t.style) + '" ', a += ">", a += t.content + "</a>"
            },
            imglink: function (e, t, i) {
                var a = "";
                return a += '<a class="' + t.clase + (i ? " custom-" + t.id : "") + '" ', a += 'href="' + t.href + '" ', a += 'target="' + t.target + '" ', (!e || t. in .override) && (a += ''), (!e || t.out.override) && (a += ''), a += 'style="' + " width: " + (isNaN(t.width) ? t.width : t.width + "px") + "; height: " + (isNaN(t.height) ? t.height : t.height + "px") + ";" + (i ? "" : t.style) + '" ', a += ">", a += '<img src="' + (i ? t.src64 : t.src) + '" alt="" />', a += "</a>"
            },
            block: function (e, t, i) {
                var a = "";
                return a += '<div class="' + t.clase + (i ? " custom-" + t.id : "") + '" ', (!e || t. in .override) && (a += ''), (!e || t.out.override) && (a += ''), a += 'style="'+ " width: " + (isNaN(t.width) ? t.width : t.width + "px") + "; height: " + (isNaN(t.height) ? t.height : t.height + "px") + "; opacity: " + t.opacity + ";" + (i ? "" : t.style) + '" ', a += "></div>"
            },
            video: function (e, t) {
                var i = {
                    vimeo: "http://player.vimeo.com/video/",
                    youtube: "http://www.youtube.com/embed/"
                }, a = "";
                return gImageLocation.val(), "" == t.videoid ? "" : (a += '<iframe src="' + i[t.videotype] + t.videoid + '" ', (!e || t. in .override) && (a += ''), (!e || t.out.override) && (a += ''), a += 'width="' + t.width.replace("px", "") + '" ' + 'height="' + t.height.replace("px", "") + '"', a += ' style="" ', a += ' frameborder="0" webkitAllowFullScreen mozallowfullscreen allowFullScreen', a += "></iframe>")
            }
        };
    $.fn.duplicate = function () {
        return this.map(function () {
            var e = $(this),
                t = e.data();
            return e.clone().data($.extend(!0, {}, t))[0]
        })
    }, $.fn.cloneData = function (e, t, i) {
        return this.each(function () {
            var a;
            t && (a = $(this).data(e), newData = "object" == typeof a ? i ? $.extend(!0, {}, a) : $.extend({}, a) : a, $(t).data(e, newData))
        })
    }, $.fn.insertAt = function (e, t) {
        var i = t.children("*").length;
        return this.each(function () {
            0 === e ? t.prepend(this) : e === i - 1 ? t.append(this) : t.children().eq(e - 1).after(this)
        })
    }, $.fn.popable = function (e) {
        function t(e) {
            var t = $(this);
            var i = getEditingElement();
            if(typeof(i) != "undefined") {
                var customclase = $("#customclase").val();
                Controller.customclase(customclase);
            }
            t.data("state", e && "hide" != e ? "hide" : "show"), t[e && "hide" != e ? "removeClass" : "addClass"]("poped")
        }

        function i(e) {
            e && (e.stopPropagation(), e.preventDefault());
            var i = $(this),
                a = i.data("id"),
                n = i.data("state");

            i.childOf(".popover") || $(".poped").popover("hide").popable("hide"), i.siblings(".poped").popover("hide").popable("hide"), t.call(this, n), n = i.data("state"), "show" == n ? o.beforeShow.call(this, a) : o.beforeHide.call(this, a), i.popover({
                html: !0,
                trigger: "manual",
                content: function () {
                    return $(a).html()
                }
            }).popover(n), (!i.data("placement") || "left" == i.data("placement")) && i.offset().left + i.width() + i.next().width() / 4 > window.innerWidth && i.next().css({
                left: i.parent().width(),
                top: i.parent().height() / 4
            }), $("html, body").stop().animate({
                scrollLeft: i.next() && i.next().offset() ? i.next().offset().left : 0
            }, 500), "show" == n ? o.afterShow.call(this, a) : o.afterHide.call(this, a)

           if(typeof(i.data("customclase")) !="undefined") {
                $("#customclase").val(i.data("customclase"));
           }
        }

        function a(t) {
            var a;
            t && t.stopPropagation(), a = $(this).data("pop"), a || "function" != typeof e.handlerTarget || (a = e.handlerTarget.call(this)), a && i.call(a)
        }
        if (this.length) {
            var n = $("body").data("popableOption"),
                o = n || $.extend({}, {
                    keyboard: !0,
                    anyclick: !0,
                    handlerSelector: !1,
                    handlerTarget: !1,
                    beforeShow: function () {},
                    afterShow: function () {},
                    beforeHide: function () {},
                    afterHide: function () {}
                }, e),
                r = $(document);
            if (n || $("body").data("popableOption", o), "object" == typeof e) {
                if ($.data(this, "popable")) return this;
                $.data(this, "popable", "Iniciado")
            }
            if ("string" == typeof e) return "toggle" == e ? i.call(this[0]) : t.call(this[0], "hide" == e ? "show" : "hide"), this;
            o.anyclick && r.on("click", $.proxy(function (e) {
                var t = $(e.target);
                t.is(this.selector) || t.parents(".popover").length || $(".poped").popable("toggle")
            }, this)), r.on("click", this.selector, i), e.handlerSelector && r.on("click", e.handlerSelector, a), o.keyboard && r.keyup(function (e) {
                27 == e.keyCode && $(".poped").popable("toggle")
            })
        }
    }, $.fn.childOf = function (e) {
        if ((typeof e).match("array|object")) {
            for (p in e)
                if (!this.childOf(e[p])) return !1;
            return !0
        }
        return this.parents(e).length
    };
    var easingList = ["linear","swing","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInExpo","easeOutExpo","easeInOutExpo","easeInSine","easeOutSine","easeInOutSine","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce"],
        splitList = ["none", "lines", "words", "chars"],
        effectFromList = ["wipeLeft", "wipeRight", "wipeTop", "wipeBottom", "expandLeft", "expandRight", "expandTop", "expandBottom", "fade", "custom.bounce", "custom.flash", "custom.pulse", "custom.rubberBand", "custom.shake", "custom.swing", "custom.tada", "custom.wobble", "custom.bounceIn", "custom.bounceInDown", "custom.bounceInLeft", "custom.bounceInRight", "custom.bounceInUp", "custom.fadeIn", "custom.fadeInDown", "custom.fadeInDownBig", "custom.fadeInLeft", "custom.fadeInLeftBig", "custom.fadeInRight", "custom.fadeInRightBig", "custom.fadeInUp", "custom.fadeInUpBig", "custom.flip", "custom.flipInX", "custom.flipInY",  "custom.lightSpeedIn", "custom.rotateIn", "custom.rotateInDownLeft", "custom.rotateInDownRight", "custom.rotateInUpLeft", "custom.rotateInUpRight", "custom.hinge", "custom.rollIn", "custom.zoomIn", "custom.zoomInDown", "custom.zoomInLeft", "custom.zoomInRight", "custom.zoomInUp"], 
        effectFromLabelList = {"wipeLeft": "wipe Left", 
                                "wipeRight": "wipe Right", 
                                "wipeTop": "wipe Top", 
                                "wipeBottom" : "wipe Bottom", 
                                "expandLeft" : "expand Left", 
                                "expandRight" : "expand Right", 
                                "expandTop" : "expand Top", 
                                "expandBottom" : "expand Bottom", 
                                "fade" : "fade"},
        effectList = ["wipeLeft", "wipeRight", "wipeTop", "wipeBottom", "expandLeft", "expandRight", "expandTop", "expandBottom", "fade", "custom.bounce", "custom.flash", "custom.pulse", "custom.rubberBand", "custom.shake", "custom.swing", "custom.tada", "custom.wobble", "custom.bounceOut", "custom.bounceOutDown", "custom.bounceOutLeft", "custom.bounceOutRight", "custom.bounceOutUp", "custom.fadeOut", "custom.fadeOutDown", "custom.fadeOutDownBig", "custom.fadeOutLeft", "custom.fadeOutLeftBig", "custom.fadeOutRight", "custom.fadeOutRightBig", "custom.fadeOutUp", "custom.fadeOutUpBig", "custom.flip", "custom.flipOutX", "custom.flipOutY", "custom.lightSpeedOut", "custom.rotateOut", "custom.rotateOutDownLeft", "custom.rotateOutDownRight", "custom.rotateOutUpLeft", "custom.rotateOutUpRight", "custom.hinge", "custom.rollOut", "custom.zoomOut", "custom.zoomOutDown", "custom.zoomOutLeft", "custom.zoomOutRight", "custom.zoomOutUp"], 
        effectLabelList = {"wipeLeft": "wipe Left", 
                                "wipeRight": "wipe Right", 
                                "wipeTop": "wipe Top", 
                                "wipeBottom" : "wipe Bottom", 
                                "expandLeft" : "expand Left", 
                                "expandRight" : "expand Right", 
                                "expandTop" : "expand Top", 
                                "expandBottom" : "expand Bottom", 
                                "fade" : "fade"};

    $("#skin-class").change(function(){
       setSliderBackground();
    })

    $("#shadow-class").change(function(){
       setSliderBackground();
    })

    $("#edit_form .save-slider").click(function(){
        if(!validateForm()) {
            return false;
        }
        var slider_json = saveslider();
        $("#slider_json_data").val(slider_json);
        editForm.submit();
    })



    $("#edit_form .save-stay-slider").click(function(){
        if(!validateForm()) {
            return false;
        }
        var slider_json = saveslider();
        $("#slider_json_data").val(slider_json);
        $("#action").val("save_stay");
        editForm.submit();
    })

});